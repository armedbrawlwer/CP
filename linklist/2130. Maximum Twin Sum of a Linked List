/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    int pairSum(ListNode* head) {
        int ans=0;
        ListNode* slow = head,*fast=head;
        while(fast && fast->next){
            slow = slow->next;
            fast = fast->next->next;
        }
        ListNode *post,*pre=NULL;
        while(slow){
            post  = slow->next;
            slow->next=pre;
            pre = slow;
            slow = post;
        }
        while(pre){
            ans = max(ans,head->val+pre->val);
            head = head->next;
            pre = pre->next;
        }
        return ans;
    }
};
