class Solution {
public:

    int  calc(string &a,string &b){
        int len = min(a.size(),b.size());
        int i=0;
        for( i=0;i<len;i++){
            if(a[i]!=b[i])break;
        }
        return i;
    }

    vector<int> longestCommonPrefix(vector<string>& words) {
        int n = words.size();
        vector<int> ans;
        if(n==1)return {0};
        if(n==2)return {0,0};
        vector<int> adj_prefix;
        for(int i=0;i<n-1;i++){
            int len = calc(words[i],words[i+1]);
            adj_prefix.push_back(len);
        }
        int size = adj_prefix.size();
        vector<int> pre(size),suff(size);
        pre[0]=adj_prefix[0];
        suff[size-1] = adj_prefix[size-1];
        for(int i=1;i<size;i++){
            pre[i] = max(pre[i-1],adj_prefix[i]);
        }
        for(int i=size-2;i>=0;i--){
            suff[i] = max(suff[i+1],adj_prefix[i]);
        }
        for(int i=0;i<n;i++){
            if(i==0){
                ans.push_back(suff[1]);
            } else if(i==n-1){
                ans.push_back(pre[size-2]);
            } else {
                int new_prefix = calc(words[i-1],words[i+1]);
                int other=0;
                if(i-2>=0){
                    other = pre[i-2];
                }
                if(i+1<size){
                    other = max(other,suff[i+1]);
                }
                int ele = max(other,new_prefix);
                ans.push_back(ele);
            }
        }
        return ans;
    }
};
