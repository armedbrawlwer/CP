class Solution {
public:
    int matrixScore(vector<vector<int>>& grid) {
        //drt the rows that have first place 0
        int m= grid.size();
        int n = grid[0].size();
        for(int i=0;i<m;i++){
            if(grid[i][0]==0){
                for(int j=0;j<n;j++){
                    grid[i][j]=1-grid[i][j];
                }
            }
        }
        //maximuse the no.of ones in each column
        for(int i=1;i<n;i++){
            int ctr=0;
            for(int j=0;j<m;j++){
                ctr+=grid[j][i]==1?1:0;
            }
            int zeroes = m-ctr;
            if(zeroes>ctr){
                for(int j=0;j<m;j++){
                grid[j][i]=1-grid[j][i];
            }
            }
        }
        int score = 0;
        for(int i = 0; i < m; i++) {

            for(int j = 0; j < n; j++) {

                int value = grid[i][j] * pow(2, n-j-1); //grid[i][j] << (n-j-1);

                score += value;

            }

        }

        return score;
    }
};
