class Solution {
public:
    int solverec(vector<int>& nums, int i, int j, int dp[][21]) {
        if (i > j)
            return 0;
        if (i == j)
            return nums[i];

        if (dp[i][j] != -1)
            return dp[i][j];

        int take_i = nums[i] + min(solverec(nums, i + 2, j,dp),
                                   solverec(nums, i + 1, j - 1,dp));
        int take_j = nums[j] + min(solverec(nums, i, j - 2,dp),
                                   solverec(nums, i + 1, j - 1,dp));

        return dp[i][j] = max(take_i, take_j);
    }

    bool predictTheWinner(vector<int>& nums) {
        int n = nums.size();
        int i = 0;
        int j = n - 1;
        int  dp[21][21];
        memset(dp, -1, sizeof(dp));
        int tot = accumulate(nums.begin(), nums.end(), 0);
        int p1score = solverec(nums, i, j, dp);
        int p2score = tot - p1score;
        return p1score >= p2score;
    }
};
