class Solution {
public:

    static bool comp(string &s1,string &s2)
    {
        return s1.size()<s2.size();
    }
    bool comparestr(string a,string b)
    {
        if(a.size()!=b.size()+1) return false;

        int first=0,second=0;
        while(first<a.size())
        {
            if(a[first]==b[second])
            {
                first++;
                second++;
            }
            else{
                first++;
            }
        }
        if(first==a.size() && second==b.size())
            {return true;}
        else
        return false;
    }
    int longestStrChain(vector<string>& words) {
        int n=words.size();
        vector<int> dp(n,1);
        vector<int> hash(n);
        int maxi=1;
        sort(words.begin(),words.end(),comp);

        for(int i=0;i<n;i++)
        {
            for(int pre=0;pre<i;pre++)
            {
                if(comparestr(words[i],words[pre]) && 1+dp[pre]>dp[i])
                {
                    dp[i]=1+dp[pre];
                }
            }
            maxi=max(dp[i],maxi);
        }
        return maxi;
    }
};
