class Solution {
public:
    int solverec(vector<int>& cuts, int i, int j,int dp[101][101]) {
        if (i > j)
            return 0;
        
        if(dp[i][j]!=-1) return dp[i][j];

        int mini = INT_MAX;
        for (int k = i; k <= j; k++) {
            int cut = cuts[j + 1] - cuts[i - 1] +
                            solverec(cuts, i, k - 1,dp) + solverec(cuts, k + 1, j,dp);

            if (cut < mini)
                mini = cut;
        }
        return dp[i][j]=mini;
    }



    int minCost(int n, vector<int>& cuts) {
        int c = cuts.size();
        cuts.push_back(n);
        cuts.insert(cuts.begin(), 0);
        int dp[101][101];
        memset(dp,-1,sizeof(dp));
        sort(cuts.begin(), cuts.end());
        return solverec(cuts, 1, c,dp);
    }
};
