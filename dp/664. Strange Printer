class Solution {
public:
int n;

    int solverec(string &s,int l,int r,int dp[][101]){
        if(l==r)return 1;
        if(l>r)return 0;
        if(dp[l][r]!=-1)return dp[l][r];
        int i=l;
        while(i<=r && s[i]==s[l]){
            i+=1;
        }
        if(i==r+1)return 1;

        int basic = 1+solverec(s,i,r,dp);
        int lalach = INT_MAX;
        for(int j=i;j<=r;j++){
            if(s[j]==s[l]){
                int ans = solverec(s,i,j-1,dp)+solverec(s,j,r,dp);
                lalach = min(lalach,ans);
            }
        }
        return dp[l][r] = min(lalach,basic);
    }

    int strangePrinter(string s) {
        n = s.size();
        int dp[101][101];
        memset(dp,-1,size-of(dp));
        return solverec(s,0,n-1,dp);

    }
};
