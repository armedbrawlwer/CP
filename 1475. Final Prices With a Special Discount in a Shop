class Solution {
public:
    vector<int> finalPrices(vector<int>& prices) {
        int n = prices.size();
        // have to find next smaller element
        // so monotonic stack
        stack<int> st;
        vector<int> ans;
        for (int i = n - 1; i >= 0; i--) {
            while (!st.empty() && st.top() > prices[i]) {
                st.pop();
            }
            int curr= st.empty() ? prices[i]:prices[i]- st.top();
            st.push(prices[i]);
            ans.push_back(curr);
        }
        reverse(ans.begin(),ans.end());
        return ans;
    }
};
