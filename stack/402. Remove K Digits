class Solution {
public:
    string removeKdigits(string s, int k) {
        int n = s.size();

        if (k >= n)
            return "0";
        // for every index remove the next greater element
        stack<char> st;
        st.push(s[0]);
        int i = 1;
        while (i < n && k > 0) {
            char curr = s[i];
            char tp = st.top();
            while (!st.empty() && st.top() > curr && k > 0) {
                st.pop();
                k -= 1;
            }
            st.push(curr);
            i += 1;
        }
        while (i < n) {
            st.push(s[i]);
            i += 1;
        }

        string ans = "";
        while (!st.empty()) {
            ans += st.top();
            st.pop();
        }
        reverse(ans.begin(), ans.end());
        while (k) {
            ans.pop_back();
            k -= 1;
        }
        int j = 0;
        while (ans[j] == '0')
            j += 1;
        return ans.substr(j, ans.size()).size() > 0 ? ans.substr(j, ans.size())
                                                    : "0";
    }
};
