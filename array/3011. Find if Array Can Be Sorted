class Solution {
public:

    int cnt_set_bits(int a){
        int ctr=0;
        while(a>0){
            int bit = a & 1;
            ctr+=bit;
            a >>= 1;
        }
        return ctr;
    }

    bool canSortArray(vector<int>& nums) {
        int n = nums.size();
        int last_bit_ctr=-1;
        int last_segment_max=INT_MIN;
        int this_segment_max = INT_MIN;
        int this_segment_min = INT_MAX;
        vector<int> segments;
        for(int i=0;i<n;i++){
            int curr_bit_cnt = cnt_set_bits(nums[i]);
            if(last_bit_ctr == -1 || curr_bit_cnt == last_bit_ctr){
                last_bit_ctr=curr_bit_cnt;
                this_segment_max = max(this_segment_max,nums[i]);
                this_segment_min = min(this_segment_min,nums[i]);
                if(this_segment_min<last_segment_max)return false;


            } else if(last_bit_ctr!=-1 && curr_bit_cnt != last_bit_ctr ){
                last_segment_max=max(last_segment_max,this_segment_max);
                last_bit_ctr = curr_bit_cnt;
                this_segment_max = nums[i];
                this_segment_min = nums[i];
                if(this_segment_min<last_segment_max)return false;
            }
        }
        return true;
    }
};
