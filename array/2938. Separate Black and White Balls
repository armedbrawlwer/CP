class Solution {
public:
    long long minimumSteps(string s) {
        int n = s.size();
        int i = 0, j = n - 1;
        int ones = 0;
        for (int i = 0; i < n; i++) {
            ones += s[i] - '0';
        }
        int zeroes = n - ones;
        if (ones == n || zeroes == n)
            return 0;
        long long ans = 0;
        while (i < j) {
            if (s[i] == '0' && s[j] == '1') {
                i += 1;
                j -= 1;
            } else if (s[i] == '0' && s[j] == '0') {
                i += 1;
            } else if (s[i] == '1' && s[j] == '1') {
                j -= 1;
            } else {
                ans += j - i;
                i += 1;
                j -= 1;
            }
        }
        return ans;
    }
};
