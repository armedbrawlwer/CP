class Solution {
public:
    int numberOfSubmatrices(vector<vector<char>>& grid) {
        int n = grid.size();
        int m = grid[0].size();
        vector<vector<pair<int, int>>> pre(n,
                                           vector<pair<int, int>>(m, {0, 0}));
        for (int i = 0; i < n; i++) {
            if (grid[i][0] == 'X') {
                pre[i][0] = {1, 0};
            } else if (grid[i][0] == 'Y') {
                pre[i][0] = {0, 1};
            }
        }
        for (int i = 0; i < n; i++) {
            for (int j = 1; j < m; j++) {
                pre[i][j] = pre[i][j - 1];
                if (grid[i][j] == 'X') {
                    pre[i][j] = {pre[i][j].first + 1, pre[i][j].second};
                } else if (grid[i][j] == 'Y') {
                    pre[i][j] = {pre[i][j].first, pre[i][j].second + 1};
                }
            }
        }
        for (int i = 1; i < n; i++) {
            for (int j = 0; j < m; j++) {
                pre[i][j] = {pre[i][j].first + pre[i - 1][j].first,
                             pre[i][j].second + pre[i - 1][j].second};
            }
        }
        int ans = 0;
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                if (pre[i][j].first == pre[i][j].second &&
                    pre[i][j].first >= 1) {
                    ans++;
                }
            }
        }
        return ans;
    }
};
