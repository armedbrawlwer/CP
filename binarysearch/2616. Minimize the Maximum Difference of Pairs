class Solution {
public:

    bool isposs(vector<int> &nums,int p,int mid){
        int ctr=0;
        int n = nums.size();
        for(int i=0;i<n-1;){
            int diff = nums[i+1]-nums[i];
            if(diff<=mid){
                ctr+=1;
                i+=2;
            }else {
                i++;
            }
            if(ctr>=p)return true;
        }
        return ctr>=p;
    }

    int minimizeMax(vector<int>& nums, int p) {
        int n = nums.size();
        sort(nums.begin(), nums.end());
        int lo = 0;
        int hi = nums.back() - nums.front();
        int ans=hi;
        while (lo <= hi) {
            int mid = lo + (hi - lo) / 2;
            if (isposs(nums, p, mid)) {
                ans = mid;
                hi = mid - 1;
            } else {
                lo = mid + 1;
            }
        }
        return ans;
    }
};
