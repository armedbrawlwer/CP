class Solution {
public:

    bool isposs(vector<int>& nums, int k,int mid){
        int n = nums.size();
        int ctr =0 ;
        int i=0;
        while(i<n){
            if(nums[i]<=mid){
                ctr+=1;
                i+=2;
            } else {
                i+=1;
            }
        }
        return ctr>=k;
    }

    int minCapability(vector<int>& nums, int k) {
        int n = nums.size();
        int lo = *min_element(nums.begin(),nums.end()),hi = *max_element(nums.begin(),nums.end());
        int ans = -1;
        while(lo<=hi){
            int mid = lo + (hi - lo)/2;
            if(isposs(nums,k,mid)){
                ans = mid;
                hi = mid - 1;
            } else {
                lo= mid+1;
            }
        }
        return ans;
    }
};
