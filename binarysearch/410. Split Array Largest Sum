class Solution {
public:
    bool isposs(vector<int>& nums, int mid, int k) {
        int current_sum = 0;  
        int subarrays = 1;    
        
        for (int num : nums) {
            if (current_sum + num > mid) {
                subarrays++;
                current_sum = num;
                if (subarrays > k) return false;
            } else {
                current_sum += num;
            }
        }
        
        return true;
    }

    int splitArray(vector<int>& nums, int k) {
        int low = *max_element(nums.begin(), nums.end());  
        int high = accumulate(nums.begin(), nums.end(), 0);
        
        int result = high; 
        while (low <= high) {
            int mid = low + (high - low) / 2;
            if (isposs(nums, mid, k)) {
                result = mid;  
                high = mid - 1;  
            } else {
                low = mid + 1;  // Otherwise, increase the range
            }
        }
        
        return result;
    }
};
