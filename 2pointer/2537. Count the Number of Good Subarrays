class Solution {
public:
    long long countGood(vector<int>& nums, int k) {
        int n = nums.size();
        unordered_map<int, int> freq;
        long long ans = 0, totalPairs = 0;
        int j = 0;

        for (int i = 0; i < n; ++i) {
            totalPairs += freq[nums[i]];  // Each previous occurrence of nums[i] makes a new pair
            freq[nums[i]]++;

            while (totalPairs >= k) {
                ans += n - i;
                freq[nums[j]]--;
                totalPairs -= freq[nums[j]];  // Removing nums[j] removes (f-1) pairs
                j++;
            }
        }

        return ans;
    }
};
