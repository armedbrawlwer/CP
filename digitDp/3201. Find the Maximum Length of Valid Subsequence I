class Solution {
public:
    int maximumLength(vector<int>& nums) {
        int n = nums.size();
        // answer can be all even or all ordd or even-odd or odd-even
        int a = 0, b = 0, c = 0, d = 0;
        for (auto i : nums) {
            if (i % 2 == 0)
                a += 1;
            else
                b += 1;
        }
        // for odd-even subseqeunce
        int ctr = 0;
        for (int i = 0; i < n; i++) {
            if (nums[i] % 2 == 0 && ctr == 0) {
                ctr = 1;
                c += 1;
            } else if (nums[i] % 2 != 0 && ctr == 1) {
                ctr = 0;
                c += 1;
            }
        }
        ctr=0;
        for (int i = 0; i < n; i++) {
            if (nums[i] % 2 != 0 && ctr == 0) {
                ctr = 1;
                d += 1;
            } else if (nums[i] % 2 == 0 && ctr == 1) {
                ctr = 0;
                d += 1;
            }
        }
        return max({a,b,c,d});
    }
};
