class Solution {
public:
    long long minArraySum(vector<int>& nums, int k) {
        int n = nums.size();
        long long sum=0;
        vector<long long> dp(n+1,0);
        unordered_map<int,int> mp;
        mp[0]=0;
        for(int i=1;i<=n;i++){
            sum += nums[i-1];
            int mod = sum%k;

            //leave this element
            dp[i] = dp[i-1] + nums[i-1];

            //find the index before that completes the sub array
            if(mp.find(mod)!=mp.end()){
                dp[i] = min(dp[i],dp[mp[mod]]);
            }

            mp[mod]=i;
        }
        return dp[n];
    }
};
