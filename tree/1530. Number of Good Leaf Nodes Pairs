/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:

    int ans;

    vector<pair<int,int>> solverec(TreeNode* root,int &dist)
    {
        if(root==NULL)return {};
        if(root->left==NULL && root->right==NULL)return {{root->val,1}};

        vector<pair<int,int>> lt = solverec(root->left,dist);
        vector<pair<int,int>> rt = solverec(root->right,dist);

        vector<pair<int,int>> v;

        for(auto x:lt){
            for(auto y:rt)
            {
                if(x.second+y.second<=dist) ans+=1;
                
            }
            v.push_back({x.first,x.second+1});
        }
        for(auto y:rt) v.push_back({y.first,y.second+1});

        return v;
    }

    int countPairs(TreeNode* root, int dist) {
        ans = 0;
        solverec(root,dist);
        return ans;
    }
};
