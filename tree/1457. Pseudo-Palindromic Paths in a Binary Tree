/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left),
 * right(right) {}
 * };
 */
class Solution {
public:
    bool ispal(unordered_map<int, int>& mp) {
        int par = 0;
        for (auto i : mp) {
            if (i.second % 2 != 0)
                par++;
        }
        return par <= 1;
    }

    void solverec(TreeNode* root, int& cnt, unordered_map<int, int>& mp) {
        if (root->left == nullptr && root->right == nullptr) {
            mp[root->val]++;
            if (ispal(mp)) {
                cnt = cnt + 1;
            }
            mp[root->val]--;
            return;
        }

        mp[root->val]++;
        if (root->left)
            solverec(root->left, cnt, mp);
        if (root->right)
            solverec(root->right, cnt, mp);
        mp[root->val]--;
    }

    int pseudoPalindromicPaths(TreeNode* root) {
        unordered_map<int, int> mp;
        int cnt = 0;
        solverec(root, cnt, mp);
        return cnt;
    }
};
