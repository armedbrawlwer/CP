class Solution {
public:
    int solve(vector<int>& nums, int k) {
        int n = nums.size();
        int i = 0;
        int j = 0;
        int ans = 0;
        unordered_map<int, int> mp;
        while (i < n) {
            mp[nums[i]]++;
            while (i>=j && mp.size() > k) {
                mp[nums[j]]--;
                if (mp[nums[j]] == 0) {
                    mp.erase(nums[j]);
                }
                j += 1;
            }
            ans += i - j + 1;
            i += 1;
        }
        return ans;
    }

    int subarraysWithKDistinct(vector<int>& nums, int k) {
        return solve(nums, k) - solve(nums, k - 1);
    }
};
