class Solution {
public:
    int takeCharacters(string s, int k) {
        int n = s.size();
        // maintain a window of characters where characters present are not
        // deleted from it if count of characcters reaches less than k shrink
        // the window
        int j = 0;
        int ans = INT_MAX;
        // have to maximise the window of characters that cannot be deleted
        vector<int> v = {0, 0, 0};
        for (int i = 0; i < n; i++) {
            v[s[i] - 'a']++;
        }
        if (v[0] < k || v[1] < k || v[2] < k)
            return -1;
        for (int i = 0; i < n; i++) {
            // include the character that will not be deleted
            v[s[i] - 'a']--;
            while (v[s[i] - 'a'] < k) {
                // shrink the window
                v[s[j] - 'a']++;
                j += 1;
            }
            int winlen = i - j + 1;
            ans = min(ans, n - winlen);
        }
        return ans == INT_MAX ? -1 : ans;
    }
};
