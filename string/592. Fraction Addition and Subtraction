class Solution {
public:
    string fractionAddition(string str) {
        int n = str.size();
        int i = 0;
        int nume = 0, deno = 1;
        while (i < n) {
            bool isneg = str[i] == '-';
            if (str[i] == '+' || str[i] == '-')
                i += 1;

            int currn = 0, currd = 0;
            // bulid the numerator
            while (i < n && isdigit(str[i])) {
                currn = currn * 10 + str[i] - '0';
                i += 1;
            }
            if (isneg == 1)
                currn *= -1;
            i += 1;
            while (i < n && isdigit(str[i])) {
                currd = currd * 10 + str[i] - '0';
                i += 1;
            }

            // compute the result
            int tn = currd*nume+deno*currn;
            int td = currd*deno;
            int GCD = gcd(tn,td);
            tn/=GCD;
            td/=GCD;
            nume=tn;
            deno=td;
        }
        return to_string(nume)+'/'+to_string(deno);
    }
};
