class Solution {
public:
    int maxRemoval(vector<int>& nums, vector<vector<int>>& arr) {
        sort(arr.begin(), arr.end());
        priority_queue<int> candidate;
        priority_queue<int, vector<int>, greater<>> chosen;
        int j = 0;
        int used = 0;
        int n = nums.size();
        for (int i = 0; i < n; i++) {
            while (j < arr.size() && arr[j][0] == i) {
                candidate.push(arr[j][1]);
                j++;
            }
            nums[i] -= chosen.size();
            // pick from candidate queries until element is equal to 0
            while (nums[i] > 0 && !candidate.empty() && candidate.top() >= i) {
                used++;
                chosen.push(candidate.top());
                candidate.pop();
                nums[i]--;
            }
            if (nums[i] > 0)
                return -1;
            while (!chosen.empty() && chosen.top() == i)
                chosen.pop();
        }
        return arr.size() - used;
    }
};
